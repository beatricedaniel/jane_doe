import os
from presidio_analyzer import AnalyzerEngine
from presidio_anonymizer import AnonymizerEngine
from presidio_anonymizer.entities import OperatorConfig
from docx import Document
import csv

# Configuration des chemins
INPUT_DIR = "../../../data/input"
OUTPUT_DIR = "data_output"
CSV_PATH = "data_output/entities.csv"
PREFIX = "anonymized_"
REPLACEMENT_TEXT = "[ANONYMOUS]"

# Initialisation des moteurs Presidio
print("Initialisation de Presidio avec le modèle par défaut...")
analyzer = AnalyzerEngine()  # Utilisation du modèle par défaut
anonymizer = AnonymizerEngine()

# Création du dossier de sortie s'il n'existe pas
if not os.path.exists(OUTPUT_DIR):
    os.makedirs(OUTPUT_DIR)

# Création du fichier CSV pour enregistrer les entités détectées
with open(CSV_PATH, mode="w", newline="", encoding="utf-8") as csv_file:
    writer = csv.writer(csv_file)
    writer.writerow(["Document", "Entity"])

    # Parcourir tous les fichiers dans le répertoire d'entrée
    for filename in os.listdir(INPUT_DIR):
        if filename.endswith(".docx"):
            input_path = os.path.join(INPUT_DIR, filename)
            output_path = os.path.join(OUTPUT_DIR, PREFIX + filename)

            print(f"Traitement de {filename}...")
            
            # Lecture du document Word
            doc = Document(input_path)
            full_text = "\n".join([p.text for p in doc.paragraphs])

            # Analyse pour trouver les entités
            results = analyzer.analyze(
                text=full_text,
                language="en",  # Langue par défaut du modèle intégré de Presidio
                entities=[],    # Utilisation de toutes les entités disponibles
                score_threshold=0.5
            )

            # Écriture des entités détectées dans le fichier CSV
            for result in results:
                writer.writerow([filename, full_text[result.start:result.end]])

            # Anonymisation des entités détectées
            anonymized_results = anonymizer.anonymize(
                text=full_text,
                analyzer_results=results,
                operators={"DEFAULT": OperatorConfig("replace", {"new_value": REPLACEMENT_TEXT})}
            )

            # Création d'un nouveau document Word avec le texte anonymisé
            anonymized_doc = Document()
            for paragraph in anonymized_results.text.split("\n"):
                anonymized_doc.add_paragraph(paragraph)

            anonymized_doc.save(output_path)

print("Anonymisation terminée. Résultats enregistrés dans :")
print(f" - Dossier : {OUTPUT_DIR}")
print(f" - Fichier CSV : {CSV_PATH}")
